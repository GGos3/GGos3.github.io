<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR, en-US"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="ko-KR, en-US" /><updated>2022-12-26T20:26:55+09:00</updated><id>/feed.xml</id><title type="html">GGos3</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><entry><title type="html">[School] 숙련기술전수-심화 1일차</title><link href="/school/2022-11-15-%EC%88%99%EB%A0%A8%EA%B8%B0%EC%88%A0%EC%A0%84%EC%88%98-%EC%8B%AC%ED%99%94-1%EC%9D%BC%EC%B0%A8/" rel="alternate" type="text/html" title="[School] 숙련기술전수-심화 1일차" /><published>2022-11-15T05:18:34+09:00</published><updated>2022-12-25T19:09:52+09:00</updated><id>/school/%EC%88%99%EB%A0%A8%EA%B8%B0%EC%88%A0%EC%A0%84%EC%88%98-%EC%8B%AC%ED%99%94-1%EC%9D%BC%EC%B0%A8</id><content type="html" xml:base="/school/2022-11-15-%EC%88%99%EB%A0%A8%EA%B8%B0%EC%88%A0%EC%A0%84%EC%88%98-%EC%8B%AC%ED%99%94-1%EC%9D%BC%EC%B0%A8/"><![CDATA[<p>숙련기술과정 1일차에 배운 내용들을 정리했다.</p>

<h2 id="암호학">암호학</h2>

<h3 id="대칭-키">대칭 키</h3>

<ul>
  <li>암/복호화시 키가 같음</li>
  <li>DES 3DES AES</li>
  <li>블록 암호화</li>
  <li>XOR 연산</li>
</ul>

<h3 id="비대칭-키">비대칭 키</h3>

<ul>
  <li>암/복호화 키가 서로 다름</li>
  <li>DH
    <ul>
      <li>상호 협약</li>
      <li>세션 키</li>
    </ul>
  </li>
  <li>RSA (PKR)
    <ul>
      <li>전자 서명</li>
      <li>3자 인증 기관 (CA)
        <ul>
          <li>클라이언트는 CA 목록을 가지고 있음</li>
          <li>브라우저 도구 security</li>
          <li>window
<img src="/assets/img/[School]_숙련기술전수-심화_1일차/Untitled.png" alt="Untitled" /></li>
        </ul>
      </li>
      <li>RSSid
        <ul>
          <li>인증 과정
<img src="/assets/img/[School]_숙련기술전수-심화_1일차/Untitled%201.png" alt="Untitled.png" /></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="asa-5505">ASA 5505</h3>

<ul>
  <li>미국에서 규제를 함 러시아, 중동에 K8 판매</li>
  <li>K8 : 데이터 암호화 스텐다드</li>
  <li>K9</li>
</ul>

<hr />

<h2 id="gre-over-ipsec">GRE-over-IPSEC</h2>

<p><img src="/assets/img/[School]_숙련기술전수-심화_1일차/Untitled%202.png" alt="Untitled" /></p>

<p>Server → PC2</p>

<p>HQ 의 ip table에는 172.16.0.254/24가 없음</p>

<p>ISP에는 사설 IP 불가</p>

<p>= HQ → BR1 터널링</p>

<p>터널에 들어가면 GRE header를 붙임</p>

<p>GRE Src 2.2.2.2 Dst 3.3.3.3</p>

<p>보통 헤더길이는 24byte지만 GRE 헤더가 붙어 길이가 늘어나게 되고, mtu가 1500인 상태로 통신을 하게되면 패킷의 최대 길이인 1524byte를넘어 패킷 단편화가 발생한다.</p>

<p>이를 방지 하기 위해서는 mtu를 1467로 설정해 GRE헤더를 붙인 패킷의 단편화를 막는다</p>

<h3 id="ipsec-vpn">ipsec vpn</h3>

<ul>
  <li>유니캐스트 통신만 가능하다 = 동적 라우팅이 불가능하다.</li>
  <li>때문에 순수 ipsec vpn을 사용하지 않음</li>
  <li>1단계 : peer 인증
    <ul>
      <li>통신 대상이 맞는지 확인</li>
      <li>Encryption method
        <ul>
          <li>DES, 3DES, AES</li>
        </ul>
      </li>
      <li>Hash AL (데이터 변조 확인)
        <ul>
          <li>MD5, SHA</li>
        </ul>
      </li>
      <li>DH Group (세션 키 생성)</li>
      <li>RSSid</li>
    </ul>
  </li>
  <li>2단계 : 데이터 암호화 (실제 ipsec)
    <ul>
      <li>암호화의 범위에 따라 터널모드와 트렌스포트모드를 사용</li>
      <li>터널모드 : 헤더까지 암호화</li>
      <li>트렌스포트모드 : paylord만 암호화</li>
      <li>ESP (대칭키 필요) → 1단계에서 사용한 세션키 사용</li>
    </ul>
  </li>
</ul>

<h3 id="실습">실습</h3>

<ul>
  <li>
    <p>HQ</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>GRE Tunnel 설정]

HQ#conf t
Enter configuration commands, one per line.  End with CNTL/Z.
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#ip nat inside source static 192.168.10.1 2.2.2.2</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#no ip nat inside source static 192.168.10.1 2.2.2.2</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#do write</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#int tun0</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip addr 10.0.0.1 255.255.255.252</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel source lo 0</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel destination 3.3.3.3</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel mode gre ip</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip mtu 1476</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#do show int tun0</span>
mtu 확인
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 172.16.0.0 255.255.255.0 tun0 10.0.0.2</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#int tun1</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip address 10.0.0.5 255.255.255.252o 0</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel destination 4.4.4.4</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#do show int tun1</span>
mtu 확인
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 172.17.0.0 255.255.255.0 tun 1 10.0.0.6</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#end</span>
HQ#show ip route

<span class="o">[</span>IPSEC 설정]

HQ#conf t
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp policy 10</span>
HQ<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#encryption aes</span>
HQ<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#hash sha</span>
HQ<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#group 14</span>
HQ<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#authentication pre-share</span>
HQ<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp key cisco address 100.0.0.3</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto ipsec transform-set TS esp-aes esp-sha-hmac</span>
HQ<span class="o">(</span>cfg-crypto-trans<span class="o">)</span><span class="c">#mode tunnel</span>
HQ<span class="o">(</span>cfg-crypto-trans<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#ip access-list extended GRE1</span>
HQ<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#permit gre host 2.2.2.2 host 3.3.3.3</span>
HQ<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto map IPSEC 10 ipsec-isakmp</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set peer 100.0.0.3</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set transform-set TS</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#match address GRE1</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#int s2/0</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#crypto map IPSEC</span>
HQ<span class="o">(</span>config-if<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#ip access-list extended GRE2</span>
HQ<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#permit gre host 2.2.2.2 host 4.4.4.4</span>
HQ<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#exit</span>
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto map IPSEC 20 ipsec-isakmp</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set peer 100.0.0.4</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set transform-set TS</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#match address GRE2</span>
HQ<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#end</span>
HQ#conf t
HQ<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp key cisco address 100.0.0.4</span>

</code></pre></div>    </div>
  </li>
  <li>
    <p>BR1</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>터널 설정]

BR1#conf t
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#int tun 0</span>
BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip address 10.0.0.2 255.255.255.252</span>
BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel source lo 0</span>
BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel destination 2.2.2.2</span>
<span class="o">{</span>BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel mode gre ip</span>
BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip mtu 1476} #기본값이라 굳이 설정하지 않아도 된다</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 192.168.10.0 255.255.255.0 tun0 10.0.0.1</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 192.168.20.0 255.255.255.0 tun0 10.0.0.1</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 172.17.0.0 255.255.255.0 tun0 10.0.0.5</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 10.0.0.4 255.255.255.252 tun0 10.0.0.1</span>

<span class="o">[</span>IPSEC 설정]

BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp policy 10</span>
BR1<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#enc aes</span>
BR1<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#ha sha</span>
BR1<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#gr 14</span>
BR1<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#authentication pre-share</span>
BR1<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#exit</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto ipsec transform-set TS esp-aes esp-sha-hmac</span>
BR1<span class="o">(</span>cfg-crypto-trans<span class="o">)</span><span class="c">#exit</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp key cisco address 100.0.0.2</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#ip access-list extended GRE1</span>
BR1<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#permit gre host 3.3.3.3 host 2.2.2.2</span>
BR1<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#exit</span>
BR1<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto map IPSEC 10 ipsec-isakmp</span>
BR1<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set peer 100.0.0.2</span>
BR1<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set transform-set TS</span>
BR1<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#match address GRE1</span>
BR1<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#int s2/0</span>
BR1<span class="o">(</span>config-if<span class="o">)</span><span class="c">#crypto map IPSEC</span>

</code></pre></div>    </div>
  </li>
  <li>
    <p>BR2</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>터널 설정]

BR2#conf t
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#int tun0</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip addr</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#ip addr 10.0.0.6 255.255.255.252</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel source lo 0</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#tunnel destination 2.2.2.2</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#exit</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 192.168.10.0 255.255.255.0 tun0 10.0.0.5</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 192.168.20.0 255.255.255.0 tun0 10.0.0.5</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 172.16.0.0 255.255.255.0 tun0 10.0.0.5</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#ip route 10.0.0.0 255.255.255.252 tun0 10.0.0.5</span>

<span class="o">[</span>IPSEC 설정]

BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#cry</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp policy 10</span>
BR2<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#encryption aes</span>
BR2<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#ha sha</span>
BR2<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#gr 14</span>
BR2<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#au pre</span>
BR2<span class="o">(</span>config-isakmp<span class="o">)</span><span class="c">#exit</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto isakmp key cisco address 100.0.0.2</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto ipsec transform-set TS esp-aes esp-sha-hmac</span>
BR2<span class="o">(</span>cfg-crypto-trans<span class="o">)</span><span class="c">#exit</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#ip access-list extended GRE2</span>
BR2<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#permit gre host 4.4.4.4 host 2.2.2.2</span>
BR2<span class="o">(</span>config-ext-nacl<span class="o">)</span><span class="c">#exit</span>
BR2<span class="o">(</span>config<span class="o">)</span><span class="c">#crypto map IPSEC 10 ipsec-isakmp</span>
BR2<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set peer 100.0.0.2</span>
BR2<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#set transform-set TS</span>
BR2<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#match address GRE2</span>
BR2<span class="o">(</span>config-crypto-map<span class="o">)</span><span class="c">#int s2/0</span>
BR2<span class="o">(</span>config-if<span class="o">)</span><span class="c">#crypto map IPSEC</span>

</code></pre></div>    </div>
  </li>
</ul>

<h3 id="gre-over-ipsec-vpn">gre over ipsec vpn</h3>

<p>시간이 없어 1일차에 진행하지 못했다.</p>]]></content><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><category term="school" /><summary type="html"><![CDATA[숙련기술과정 1일차에 배운 내용들을 정리했다.]]></summary></entry><entry><title type="html">[School] 컴퓨터네트워크 시험 대비 정리</title><link href="/school/2022-10-18-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="[School] 컴퓨터네트워크 시험 대비 정리" /><published>2022-10-18T04:21:19+09:00</published><updated>2022-12-25T19:17:13+09:00</updated><id>/school/%EC%BB%B4%ED%93%A8%ED%84%B0%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="/school/2022-10-18-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/"><![CDATA[<blockquote>
  <p>시험도 다가오고 자습시간에 할만한게 없나 찾아보다 정리하게 되었다.
오타나 틀린곳이 있다면 PR 보내주세오..😢</p>
</blockquote>

<h2 id="ipv4-형식문제-1">IPv4 형식문제 (1)</h2>

<ul>
  <li>1983년 시작, 32Bit 체계이며 8Bit 4개의 옥텟으로 10진수 표기</li>
  <li>IPv4 범위 : 00000000000000000000000000000000 ~ 11111111111111111111111111</li>
  <li>IPv4 표현
| 8Bit | 8Bit | 8Bit | 8Bit |
| —- | —- | —- | —- |</li>
  <li>IPv4 총 개수 : 2^32개</li>
  <li>IPv4는 관리 목적상 A, B, C, D, E 클래스로 구분한다.
    <ul>
      <li>클래스 구분 기준 : 맨 앞 비트부터 공통 비트가 있는 범위를 기준으로 구분</li>
    </ul>
  </li>
</ul>

<h2 id="class-구문-문제-3">Class 구문 문제 (3)</h2>

<ul>
  <li>A Class : 0 ~ 127</li>
  <li>B Class : 128 ~ 191</li>
  <li>C Class : 192 ~ 223</li>
  <li>D Class : 224 ~ 239</li>
  <li>E Class : 240 ~ 255</li>
</ul>

<h2 id="사용자-인터페이스-ip를-사용할-수-없는-대역-1">사용자 인터페이스 IP를 사용할 수 없는 대역 (1)</h2>

<ul>
  <li>D ~ E Class : 224 ~ 255</li>
  <li>0.0.0.0 ~ 0.255.255.255</li>
  <li>127.0.0.1 ~ 127.255.255.255</li>
  <li>255.255.255.255</li>
  <li>네트워크 이름 : 192.168.10.0</li>
  <li>서브넷브로드캐스트 주소 : 192.168.10.255</li>
</ul>

<h2 id="서브넷마스크-prefix-표기-1">서브넷마스크 prefix 표기 (1)</h2>

<ul>
  <li>prefix : 서브넷 마스크의 맨 앞 비트부터 1의 개수를 표기한 것</li>
  <li>&lt; Prefix 표기법 예시 &gt;
255.255.255.255 11111111.11111111.11111111.11111111 → /32
255.255.255.0 11111111.11111111.11111111.0 → /24
255.255.255.248 11111111.11111111.11111111.11111000 → /29</li>
</ul>

<h2 id="well-know-service-1">Well know service (1)</h2>

<table>
  <thead>
    <tr>
      <th>포트번호</th>
      <th>프로토콜</th>
      <th>서비스</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>20</td>
      <td>TCP</td>
      <td>FTP data</td>
    </tr>
    <tr>
      <td>21</td>
      <td>TCP</td>
      <td>FTP control</td>
    </tr>
    <tr>
      <td>22</td>
      <td>TCP</td>
      <td>SSH</td>
    </tr>
    <tr>
      <td>23</td>
      <td>TCP</td>
      <td>Telnet</td>
    </tr>
    <tr>
      <td>25</td>
      <td>TCP</td>
      <td>SMTP</td>
    </tr>
    <tr>
      <td>80</td>
      <td>TCP</td>
      <td>HTTP</td>
    </tr>
    <tr>
      <td>110</td>
      <td>TCP</td>
      <td>POP3</td>
    </tr>
    <tr>
      <td>443</td>
      <td>TCP</td>
      <td>HTTPS</td>
    </tr>
  </tbody>
</table>

<h2 id="사설-ip-구분-문제-1">사설 IP 구분 문제 (1)</h2>

<ul>
  <li>사설 IP 대역
| 10.0.0.0/8 | 10.0.0.0 ~ 10.255.255.255 |
| ————– | —————————– |
| 172.16.0.0/12 | 172.16.0.0 ~ 172.31.255.255 |
| 192.168.0.0/16 | 192.168.0.0 ~ 192.168.255.255 |</li>
</ul>

<h2 id="사설-ip와-공인-ip-특징-구분-문제-1">사설 IP와 공인 IP 특징 구분 문제 (1)</h2>

<ul>
  <li>공인 IP : <strong>인터넷과 연결이 가능한 IP</strong>이다. 즉, 인터넷에서 사용되는 IP이며 인터넷에서 데이터 전송으로 하려면 출발지 주소가 공인 IP이어야 한다.</li>
  <li>사설 IP : <strong>인터넷과 연결이 불가능하며 내부 용으로 사용되는 IP</strong>이다. 만약 인터넷 환경에서 데이터 전송을 하려면 NAT 장치를 이용하여 출발지 사설 주소가 공인 IP로 변환되어야 한다.</li>
</ul>

<h2 id="nat-종류-특징-이해-문제-1">NAT 종류 특징 이해 문제 (1)</h2>

<ul>
  <li>고정 NAT(Static NAT)
하나의 내부 사설 IP와 하나의 외부 공인 IP 주소를 1:1로 매핑
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled.png" alt="Untitled" /></li>
  <li>동적 NAT(Dynamic NAT)
적정량의 공인 IP주로를 NAT Pool로 만들어 통신할때 사설 IP주소를 NAT Pool에서 사용 가능한 공인 IP주소로 변환한다. 주로 공인 IP 주소의 수가 사설 IP 주소의 수보다 적을 때 사용한다.
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%201.png" alt="Untitled" /></li>
  <li>PAT(Port Address Translation)
하나의 공인 IP 주소를 다수의 내부 사용자가 공유하여 사용하는 방식으로 여러 사용자를 구별하기 위해 TCP/UDP 출발지 포트를 변환하다.
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%202.png" alt="Untitled" /></li>
</ul>

<h2 id="주어진-서브넷을-이용해-실제-사용가능한-ip-대역-구하기-1">주어진 서브넷을 이용해 실제 사용가능한 IP 대역 구하기 (1)</h2>

<blockquote>
  <p><strong>다음 ip주소가 존재하는 네트워크 ip 주소 범위를 구하시오.
183.62.72.130 / 26</strong></p>
</blockquote>

<p>/26 = 11111111.11111111.11111111.11000000</p>

<p>네트워크 비트 2비트 ⇒ 2^2 = 4, 호스트 비트 6비트⇒ 2^6 = 64</p>

<p>0 ~ 63, 64 ~ 127, 128 ~ 191, 192 ~ 255</p>

<p>ip의 4번째 옥텟이 130이고, 130은 128 ~ 191 사이에 있으므로 정답은
183.62.72.128 ~ 191</p>

<h2 id="서브넷을-이용해-서브넷브로드캐스트-ip-네트워크-id-구하기-1">서브넷을 이용해 서브넷브로드캐스트 IP, 네트워크 ID 구하기 (1)</h2>

<blockquote>
  <p><strong>다음 ip주소의 서브넷브로드캐스트와 네트워크 ID를 구하시오
212.254.70.180/25</strong></p>
</blockquote>

<p>/25 = 11111111.11111111.11111111.10000000</p>

<p>네트워크 비트 1 비트 ⇒ 2^1 = 2, 호스트 비트 7비트 ⇒ 2^7 = 128</p>

<p>0 ~ 127, 128 ~ 255</p>

<p>180은 128 ~ 255 사이에 있고 네트워크 ID = 대역의 맨 앞자리, 서브넷브로드캐스트 = 대역의 맨 뒷자리 이므로 정답은</p>

<p>네트워크 ID : 212.254.70.128</p>

<p>서브넷브로드캐스트: 212.254.70.255</p>

<h2 id="주어진-ip-서브넷마스크를-이용해-네트워크-이름-구하기-1">주어진 IP, 서브넷마스크를 이용해 네트워크 이름 구하기 (1)</h2>

<blockquote>
  <p>192.168.1.85/25 네트워크 ID를 구하시오</p>
</blockquote>

<ul>
  <li>서브넷비트가 1비트이므로 128씩 2개의 서브넷생기고 85는 0~127 사이에 있기때문에 정답은</li>
  <li><strong>192.168.1.0</strong></li>
</ul>

<h2 id="cidr-특징-및-계산-문제-1">CIDR 특징 및 계산 문제 (1)</h2>

<ul>
  <li>특징 : 라우팅 테이블에 라우팅 정보를 요약 저장해 정보 교환시 데이터 양을 줄일 수 있다.
CIDR을 사용하지 않을 경우
192.168.8.0/24
192.168.9.0/24
…
192.168.15.0/24
사용한 경우
192.168.8.0/21</li>
  <li>
    <p>방법
ip를 2진수로 나타내어 공통 비트 부분까지를 표시한다
192.168.8.0/24
192.168.9.0/24</p>

    <p>192.168.00001|000.0
192.168.00001|001.0
192.168.00001|010.0
21bit까지 일치 하므로 정답은
192.168.8.0/21</p>
  </li>
</ul>

<h2 id="라우팅테이블-이해문제-1">라우팅테이블 이해문제 (1)</h2>

<ul>
  <li>라우팅 테이블 : 목적지 네트워크까지의 최적의 경로 정보를 모아 놓은곳</li>
</ul>

<h2 id="인터넷주소-관리기반전세계-아시아-우리나라-1">인터넷주소 관리기반(전세계, 아시아, 우리나라) (1)</h2>

<p>전세계 : ICNNA</p>

<p>아시아 : APNIC</p>

<p>우리나라 : KISA</p>

<h2 id="ipv6-관련-문제-1">IPv6 관련 문제 (1)</h2>

<ul>
  <li>IPv6의 주소 체계
    <ul>
      <li>16비트 단위로 구분하며, 각 16비트 블록은 다시 4자리의 16진수로 변환 되어(:)으로 구분한다.
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%203.png" alt="Untitled" /></li>
    </ul>
  </li>
  <li>IPv6의 주소 유형
    <ul>
      <li>유니캐스트 주소
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%204.png" alt="Untitled" /></li>
      <li>애니캐스트 주소
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%205.png" alt="Untitled" /></li>
      <li>멀티캐스트 주소
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%206.png" alt="Untitled" /></li>
    </ul>
  </li>
  <li>IPv6의 주소 표기법
    <ul>
      <li>일반적인 표기법
IPv6 주소는 16비트 단위로 구분하며, 각 16비트 블록은 다시 4자리의 16진수로 변환하여 표기한다. 이때 16진수는 대소문자를 구분하지 않는다.
0000 0111 1010 0001 (16비트) → 07A1 (16진수 4자리)</li>
      <li>각 블록은 : 을 통해 구분하여 총 8개의 블록으로 표기한다.
<strong>07a1:0000:0000:0000:3ac0:18f0:120e:91ac</strong>
<img src="/assets/img/[School]_컴퓨터네트워크_시험_대비_정리/Untitled%207.png" alt="Untitled" /></li>
      <li>생략 표기법
        <ul>
          <li>각 블록의 앞에 연속되는 ‘0’은 생략 할 수 이다 07A1 → 7A1</li>
          <li>0으로만 이루어진 한 블럭(’0000’) 은 ‘0’으로 표기 할 수 있다.</li>
          <li>연속되는 ‘0’의 블록은 1회에 한하여 ‘::’으로 표기 할 수 있다.
            <ul>
              <li><strong>07A1:0000:0000:0000:3AC0:18F0:120E:91AC → 7A1::3AC0:18F0:120E:91AC</strong></li>
            </ul>
          </li>
          <li>단, 1회에 한하여 바꿀 수 있기 때문에 다음과 같이 바꿀 수 는 없다.
            <ul>
              <li><strong>120B:0000:0000:07A1:0000:0000:10CA → 120B::7A1::10CA (×)</strong></li>
            </ul>
          </li>
        </ul>
      </li>
      <li>프리픽스(prefix)
        <ul>
          <li>IPv6 주소의 프리픽스 기존 IPv4 주소에서 사용하던 서브넷과 유사한 개념으로 IPv4 주소에서 사용하던 /16, /24, /32 등이 IPv6 주소에서는 /48, /64, /128 등으로 표현된다. 예를 들어 다음과 같은 표기는 처음 64비트가 네트워크 접두사라는 것을 의미한다.
            <ul>
              <li><strong>21DA:D3:0:2F3B:2AA:FF:FE28:9C5A/64</strong></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="서브넷을-이용해-다양한-해석-문제-1">서브넷을 이용해 다양한 해석 문제 (1)</h2>

<blockquote>
  <p>200.64.10.0/24 네트워크 ID, 브로드캐스트, 서브넷마스크, 사용가능 ip 대역은?</p>
</blockquote>

<ul>
  <li>네트워크 ID : 200.64.10.0</li>
  <li>브로드캐스트 : 200.64.10.254</li>
  <li>서브넷마스크 : 255.255.255.0</li>
  <li>사용가능 대역 : 200.64.10.1 ~ 254</li>
</ul>

<h2 id="주어진-서브넷을-특정개수의-네트워크로-서브네팅하기-1">주어진 서브넷을 특정개수의 네트워크로 서브네팅하기 (1)</h2>

<blockquote>
  <p>200.119.15.0/24 <strong>를 4개의 서브넷으로 서브네팅 하시오</strong></p>
</blockquote>

<p>2^2 = 4 이므로 호스트 비트 두개를 서브넷 비트로 변환한다.</p>

<p>200.119.15.sshhhhhh/24 → /26</p>

<p>256 을 4로 나누고 각 서브넷에 할당한다.</p>

<table>
  <tbody>
    <tr>
      <td>1번 서브넷 200.119.15.00</td>
      <td>000000 ~ 200.119.15.00</td>
      <td>111111/26 (0 ~ 63)</td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>2번 서브넷 200.119.15.01</td>
      <td>000000 ~ 200.119.15.01</td>
      <td>111111/26 (64 ~ 127)</td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>3번 서브넷 200.119.15.10</td>
      <td>000000 ~ 200.119.15.10</td>
      <td>111111/26 (128 ~ 191)</td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>4번 서브넷 200.119.15.11</td>
      <td>000000 ~ 200.119.15.11</td>
      <td>111111/26 (192 ~ 255)</td>
    </tr>
  </tbody>
</table>

<h2 id="주어진-조건에-맞게-서브넷팅-문제-1">주어진 조건에 맞게 서브넷팅 문제 (1)</h2>

<blockquote>
  <p>한세사이버보안고에서 C Class 211.100.100.0/24 를 배정 받았다. 이때 실습실에 필요한 서브넷 개수는 5개이고 각 28개의 ip를 할당 받아야 한다. 주어진 조건에 맞게 서브네팅 하시오</p>
</blockquote>

<ul>
  <li>
    <p>2^n -2 &gt;= 28<br />
2^5 안에 28이 들어가므로
n = 5<br />
/24 -&gt; /27<br />
1번 서브넷 211.100.100.000|00000 ~ 211.100.100.000|11111/27 (0 ~ 31)<br />
2번 서브넷 211.100.100.001|00000 ~ 211.100.100.001|11111/27 (32 ~ 63)<br />
3번 서브넷 211.100.100.010|00000 ~ 211.100.100.010|11111/27 (64 ~ 95)<br />
4번 서브넷 211.100.100.011|00000 ~ 211.100.100.011|11111/27 (96 ~ 127)<br />
5번 서브넷 211.100.100.100|00000 ~ 211.100.100.100|11111/27 (128 ~ 159)<br />
6번 서브넷 211.100.100.101|00000 ~ 211.100.100.101|11111/27 (160 ~ 191)<br />
7번 서브넷 211.100.100.110|00000 ~ 211.100.100.110|11111/27 (192 ~ 223)<br />
8번 서브넷 211.100.100.111|00000 ~ 211.100.100.111|11111/27 (224 ~ 255)</p>

    <p>서브넷 1, 2, 3, 4, 5를 실습실에 할당하고 나머지는 스페어처리한다.</p>
  </li>
</ul>

<h2 id="주어진-조건에-맞게-vlsm-하기-1">주어진 조건에 맞게 VLSM 하기 (1)</h2>

<blockquote>
  <p>회사에 192.168.1.0 C Class를 배정하였다. 인사부에는 10개의 host를 만족하는 network,마케팅부에는 30개의 host를 만족하는 network, 영업부에는 120개의 host를 만족하는 network를 사용하려고 한다. 조건을 맞도록 VLSM Subnetting을 하시오.</p>
</blockquote>

<ul>
  <li>
    <p>host가 가장 많은곳 부터 서브네팅</p>
  </li>
  <li>
    <p>(1) host120 (영업부)</p>

    <ul>
      <li>2^n -2 &gt;= 120<br />
n = 7<br />
/24 -&gt; /25<br />
1번 서브넷 192.168.1.0|0000000 ~ 192.168.1.0|1111111/25 (0 ~ 127)<br />
2번 서브넷 192.168.1.1|0000000 ~ 192.168.1.1|1111111/25 (128 ~ 255)<br />
1번 서브넷을 영업부에 할당하고 2번 서브넷을 VLSM 해준다.</li>
    </ul>
  </li>
  <li>
    <p>(2) host 30 (마케팅부)</p>

    <ul>
      <li>2^n -2 &gt;= 30<br />
n = 5<br />
/25 -&gt; /27<br />
1번 서브넷 192.168.1.1|00|00000 ~ 192.168.1.1|00|111111/27 (128 ~ 159)<br />
2번 서브넷 192.168.1.1|01|00000 ~ 192.168.1.1|01|111111/27 (160 ~ 191)<br />
3번 서브넷 192.168.1.1|10|00000 ~ 192.168.1.1|10|111111/27 (192 ~ 223)<br />
4번 서브넷 192.168.1.1|11|00000 ~ 192.168.1.1|11|111111/27 (224 ~ 255)<br />
1번 서브넷을 마케팅부에 할당하고 2번 서브넷을 VLSM 해준다.</li>
    </ul>
  </li>
  <li>
    <p>(3) host 10 (인사부)</p>

    <ul>
      <li>2^n -2 &gt;= 10<br />
n = 4<br />
/27 -&gt; /28<br />
1번 서브넷 192.168.1.101|0|0000 ~ 192.168.1.101|0|1111/28 (160 ~ 175)<br />
2번 서브넷 192.168.1.101|1|0000 ~ 192.168.1.101|1|0000/28 (176 ~ 191)<br />
1번 서브넷을 인사부에 할당하고 나머지는 스페어 처리한다.</li>
    </ul>

    <p>출처 https://travislife.tistory.com/m/54</p>
  </li>
</ul>]]></content><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><category term="school" /><summary type="html"><![CDATA[시험도 다가오고 자습시간에 할만한게 없나 찾아보다 정리하게 되었다. 오타나 틀린곳이 있다면 PR 보내주세오..😢]]></summary></entry><entry><title type="html">[School] 자바 시험 대비 정리</title><link href="/school/2022-10-14-%EC%9E%90%EB%B0%94-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="[School] 자바 시험 대비 정리" /><published>2022-10-14T20:26:33+09:00</published><updated>2022-12-25T22:37:28+09:00</updated><id>/school/%EC%9E%90%EB%B0%94-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="/school/2022-10-14-%EC%9E%90%EB%B0%94-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/"><![CDATA[<p>학교 시험을 대비해 Java 수업 내용을 정리했다.</p>

<h2 id="자바-패키지">자바 패키지</h2>

<ul>
  <li>패키지 : 서로 관련된 클래스와 인터페이스들의 모임</li>
  <li>패키지는 각각 하나의 디렉토리와 대응</li>
  <li>자바 응용프로그램은 하나 이상의 패키지로 구성</li>
</ul>

<p><img src="/assets/img/[School]_자바_시험_대비_정리/mceclip0.png" alt="mceclip0.png" /></p>

<h2 id="주요-패키지">주요 패키지</h2>

<ul>
  <li>java.lang
    <ul>
      <li>자바 언어의 <strong>기초기능</strong>을 정의한 클래스들의 모음집</li>
      <li>Object 클래스, String, System, 멀티스레드 등의 클래스를 포함</li>
      <li>자동으로 import 됨</li>
    </ul>
  </li>
  <li>java.io
    <ul>
      <li>자바 언어의 <strong>입출력 기능</strong>과 관련된 클래스를 포함</li>
      <li>키보드, 모니터, 프린터, 파일, 버퍼 등의 기능을 가짐</li>
    </ul>
  </li>
  <li>java.util
    <ul>
      <li>자바가 제공하는 편의기능과 관련된 패키지</li>
      <li>날짜, 시간, 벡터, 해시맵 등 유틸리티성 클래스를 제공</li>
    </ul>
  </li>
  <li>java.net
    <ul>
      <li>자바의 통신 기능과 관련된 패키지</li>
      <li>소켓 관련 기능 제공</li>
    </ul>
  </li>
  <li>java.sql
    <ul>
      <li>데이터베이스 기능과 관련된 패키지</li>
      <li>데이터베이스 연결, 관리, 명령처리 기능 제공</li>
    </ul>
  </li>
  <li>java.awt
    <ul>
      <li>GUI 프로그래밍과 관련된 패키지</li>
      <li>java.swing 패키지와 함께 주로 사용됨</li>
      <li>버튼, 텍스트 필드, 메뉴 등 컴포넌트, 이벤트 기능 제공</li>
    </ul>
  </li>
  <li>java.swing
    <ul>
      <li>java.awt 패키지와 함께 GUI 프로그래밍에 사용</li>
      <li>java.awt 보다 다양하고 융통성 있는 컴포넌트 제공</li>
    </ul>
  </li>
  <li>java.applet
    <ul>
      <li>자바 애플릿과 관련된 패키지</li>
      <li>자바 애플릿 : 웹 브라우저 상에서 돌아가는 Java 프로그램</li>
    </ul>
  </li>
</ul>

<h2 id="패키지-이용방법">패키지 이용방법</h2>

<h3 id="방법-1소스-시작-부분에-import문을-사용한다">방법 1.소스 시작 부분에 import문을 사용한다</h3>

<ul>
  <li>import 패키지.*</li>
  <li>import 패키지.클래스</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PackageExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Date</span> <span class="n">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Date</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">now</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="방법-2-패키지클래스함수명">방법 2. 패키지.클래스.함수명</h3>

<ul>
  <li>import를 사용하지 않고 자바 제공 클래스를 사용한다.</li>
  <li>패키지 이름을 포함한 클래스 전체 이름을 사용한다.</li>
  <li>클래스 이름이 너무 길어 사용하기 불편하다.</li>
  <li>미리 사용하고자 하는 클래스는 import 하기</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PackageExam2</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Date</span> <span class="n">now</span> <span class="o">=</span> <span class="k">new</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Date</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">now</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h1 id="javalang-패키지---object">java.lang 패키지 - Object</h1>

<h2 id="javalang-패키지">java.lang 패키지</h2>

<ul>
  <li>자바 언어의 기초 클래스를 제공</li>
  <li>자동으로 import 된다.</li>
</ul>

<h2 id="javalangobject-클래스">java.lang.Object 클래스</h2>

<ul>
  <li>최상위 클래스</li>
  <li>모든 클래스는 Object 클래스를 자동으로 상속받음</li>
  <li>equals(), toString() 메소드</li>
</ul>

<h2 id="객체-비교-방법">객체 비교 방법</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FishExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span> <span class="o">(</span><span class="s">"단팥 붕어빵"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span> <span class="o">(</span><span class="s">"단팥 붕어빵"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">str3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span> <span class="o">(</span><span class="s">"슈크림 붕어빵"</span><span class="o">);</span>

        <span class="c1">// 비교 연산자: 같은 붕어빵인가요?</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str1</span> <span class="o">==</span> <span class="n">str2</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 같은 붕어빵"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 다른 붕어빵"</span><span class="o">);</span>

        <span class="c1">// 비교 연산자: 같은 붕어빵인가요?</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str1</span> <span class="o">==</span> <span class="n">str3</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 3번은 같은 붕어빵"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 3번은 다른 붕어빵"</span><span class="o">);</span>

        <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span> <span class="o">==</span> <span class="n">str2</span><span class="o">.</span><span class="na">toString</span><span class="o">())</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 내용물이 같은 붕어빵"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 내용물이 다른 붕어빵"</span><span class="o">);</span>

        <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 내용물이 같은 붕어빵"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"1, 2번은 내용물이 다른 붕어빵"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=57610:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">FishExam</span>
<span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="n">번은</span> <span class="n">다른</span> <span class="n">붕어빵</span>
<span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="n">번은</span> <span class="n">다른</span> <span class="n">붕어빵</span>
<span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="n">번은</span> <span class="n">내용물이</span> <span class="n">다른</span> <span class="n">붕어빵</span>
<span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="n">번은</span> <span class="n">내용물이</span> <span class="n">같은</span> <span class="n">붕어빵</span>
</code></pre></div></div>

<ul>
  <li>equals()는 대상의 내용 자체를 비교하기 때문에 str1 과 str2는 같다고 나옴</li>
  <li>== 비교 연산자를 사용한다면 대상의 주소 값을 비교해 str1 과 str2 는 다르다고 나온다</li>
</ul>

<h2 id="objecttostring-메소드"><strong>Object.toString() 메소드</strong></h2>

<ul>
  <li>클래스를 <strong>String 형으로 변환</strong>하는 메소드</li>
  <li>보통 각 클래스에서 오버라이딩하여 다른 출력을 가지게 된다</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ObjTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ToStrTest</span> <span class="n">test</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ToStrTest</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Test Str"</span><span class="o">;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">test</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">ToStrTest</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">){</span>
        <span class="k">return</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h1 id="javalang-패키지---string">java.lang 패키지 - String</h1>

<p><strong>java.lang.String 클래스</strong></p>

<ul>
  <li><strong>문자열 처리</strong>를 위한 클래스</li>
  <li>String 상수는 하나의 메모리 공간에 저장됨</li>
  <li>String 클래스로 생성된 문자열은 <strong>수정 불가능</strong></li>
  <li>API: <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html">https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html</a></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">s1</span> <span class="o">=</span> <span class="s">"Hello"</span><span class="o">;</span>              <span class="c1">// String (상수)</span>
<span class="nc">String</span> <span class="n">s2</span> <span class="o">=</span> <span class="s">"Hello"</span><span class="o">;</span>              <span class="c1">// String (상수)</span>
<span class="nc">String</span> <span class="n">s3</span> <span class="o">=</span> <span class="n">s1</span><span class="o">;</span>                   <span class="c1">// 같은 참조</span>
<span class="nc">String</span> <span class="n">s4</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"Hello"</span><span class="o">);</span>  <span class="c1">// String object (객체)</span>
<span class="nc">String</span> <span class="n">s5</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"Hello"</span><span class="o">);</span>  <span class="c1">// String object (객체)</span>
</code></pre></div></div>

<p><img src="/assets/img/[School]_자바_시험_대비_정리/mceclip0_2.png" alt="mceclip0_2.png" /></p>

<h2 id="stringlength-메소드"><strong>String.length() 메소드</strong></h2>

<ul>
  <li>String 클래스의 <strong>문자열의 길이</strong>를 반환</li>
  <li>공백도 하나의 문자로 인식</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Twitch TV"</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"문자열: "</span> <span class="o">+</span> <span class="n">str</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"길이: "</span> <span class="o">+</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="stringcharat-메소드"><strong>String.charAt() 메소드</strong></h2>

<ul>
  <li>문자열 안에 있는 <strong>특정 위치의 문자</strong>를 반환</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CharAtExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"legeno"</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="stringequals-메소드"><strong>String.equals() 메소드</strong></h2>

<ul>
  <li>문자열의 <strong>내용이 같은지</strong> 비교</li>
  <li>참고: 비교 연산자(==)는 메모리 상에서 같은 객체인지를 비교</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EqualExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">"hansei"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="s">"hansei"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">str3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"highschool"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">str4</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"highschool"</span><span class="o">);</span>

        <span class="k">if</span><span class="o">(</span><span class="n">str1</span> <span class="o">==</span> <span class="n">str2</span> <span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"주소 같다"</span><span class="o">);</span>
            <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"주소 다르다"</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str3</span> <span class="o">==</span> <span class="n">str4</span> <span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"주소 같다"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"주소 다르다"</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용 같다"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용 다르다"</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str3</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str4</span><span class="o">))</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용 같다"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용 다르다"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=57634:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">EqualExam</span>
<span class="n">주소</span> <span class="n">같다</span>
<span class="n">주소</span> <span class="n">다르다</span>
<span class="n">내용</span> <span class="n">같다</span>
<span class="n">내용</span> <span class="n">같다</span>
</code></pre></div></div>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ReWindExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"Re:Wind"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">(</span><span class="s">"Re:Wind"</span><span class="o">);</span>

        <span class="c1">// 비교 연산자: 메모리 상에서 같은 녀석일까?</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str1</span> <span class="o">==</span> <span class="n">str2</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"같은 녀석임"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"같은 녀석이 아닌 도플갱어"</span><span class="o">);</span>

        <span class="c1">// String.equals(): 문자열의 내용이 같은가?</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용이 같음"</span><span class="o">);</span>
        <span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"내용이 같지 않음"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=57624:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">ReWindExam</span>
<span class="n">같은</span> <span class="n">녀석이</span> <span class="n">아닌</span> <span class="n">도플갱어</span>
<span class="n">내용이</span> <span class="n">같음</span>
</code></pre></div></div>

<h2 id="stringvalueof-메소드"><strong>String.valueOf() 메소드</strong></h2>

<p>• String이 아닌 다른 자료형의 매개 변수 값을 <strong>String 형으로 변환</strong>하는 메소드</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ValueofExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">'A'</span><span class="o">;</span>
        <span class="kt">double</span> <span class="n">test</span> <span class="o">=</span> <span class="mf">11.2</span><span class="o">;</span>
        <span class="kt">char</span> <span class="n">charr</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[]{</span><span class="sc">'a'</span><span class="o">,</span><span class="sc">'b'</span><span class="o">};</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ch</span><span class="o">)</span> <span class="o">+</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">test</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><strong>valueOf()와 ‘+’의 차이</strong></p>

<ul>
  <li><strong>문자열 + 정수, 문자열 + 실수</strong>는 valueOf()를 사용하지 않아도 동작한다</li>
  <li><strong>char[] 자료형</strong>은 valueOf()를 사용한 것과 문자열 뒤에 덧셈 한 결과가 다르다</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 위의 코드를 아래와 같이 수정하여 두 개의 차이점을 비교해보자!</span>
<span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ch</span><span class="o">)</span> <span class="o">+</span> <span class="n">charr</span> <span class="o">;</span><span class="c1">// 자동으로 .toString() 메소드가 호출된다</span>

<span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">ch</span><span class="o">)</span> <span class="o">+</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">charr</span><span class="o">);</span> <span class="c1">// charr가 String으로 변환된다</span>
</code></pre></div></div>

<h2 id="stringtrim-메소드"><strong>String.trim() 메소드</strong></h2>

<p>• String의 앞,뒤 <strong>공백을 제거</strong>해주는 메소드</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TrimTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">"  This is TEST    "</span><span class="o">;</span>

        <span class="c1">// 그냥 출력?</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">str1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"END"</span><span class="o">);</span>

        <span class="c1">// trim()한 결과</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">trim</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"END"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="stringsubstring-메소드"><strong>String.subString() 메소드</strong></h2>

<ul>
  <li><strong>문자열의 일부</strong>를 반환하는 메소드</li>
  <li>자바 API: <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html">String</a></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">"hi hello"</span><span class="o">;</span>
<span class="c1">// java API를 보고 해결해보세요</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">3</span><span class="o">));</span>   <span class="c1">// hello를 출력</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>   <span class="c1">// hi를 출력</span>
</code></pre></div></div>

<hr />

<h1 id="javalang-패키지---stringbuffer">java.lang 패키지 - StringBuffer</h1>

<h2 id="javalangstringbuffer-클래스"><strong>java.lang.StringBuffer 클래스</strong></h2>

<ul>
  <li><strong>문자열 처리</strong>를 위한 클래스</li>
  <li>StringBuffer 클래스로 생성된 문자열은 <strong>수정 가능</strong></li>
</ul>

<h2 id="stringbufferappend-메소드"><strong>StringBuffer.append() 메소드</strong></h2>

<ul>
  <li>문자열 뒤에 <strong>내용을 추가</strong>하는 메소드</li>
  <li>매개변수에 <strong>다양한 자료형 사용 가능</strong></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppendExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuffer</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">(</span><span class="s">" Java Programming"</span><span class="o">);</span>
        <span class="nc">StringBuffer</span> <span class="n">sb2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">(</span><span class="s">" Project"</span><span class="o">);</span>
        <span class="nc">StringBuffer</span> <span class="n">str1</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">StringBuffer</span> <span class="n">str2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span> <span class="c1">//</span>
        <span class="kt">double</span> <span class="n">db</span> <span class="o">=</span> <span class="mf">12.5</span><span class="o">;</span> <span class="c1">//</span>
        <span class="kt">char</span> <span class="n">chr</span> <span class="o">=</span> <span class="sc">'A'</span><span class="o">;</span> <span class="c1">//</span>

        <span class="n">str1</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" Project"</span><span class="o">);</span>
        <span class="n">str2</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">sb2</span><span class="o">);</span>
        <span class="n">sb2</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">num</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">db</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">chr</span><span class="o">);</span> <span class="c1">// 다양한 자료형의 데이터들을 이어 붙일 수 있다</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sb1 = "</span> <span class="o">+</span> <span class="n">sb1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sb2 = "</span> <span class="o">+</span> <span class="n">sb2</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"str1 = "</span> <span class="o">+</span> <span class="n">str1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"str2 = "</span> <span class="o">+</span> <span class="n">str2</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=60196:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">AppendExam</span>
<span class="n">sb1</span> <span class="o">=</span>  <span class="nc">Java</span> <span class="nc">Programming</span> <span class="nc">Project</span> <span class="nc">Project</span>
<span class="n">sb2</span> <span class="o">=</span>  <span class="nc">Project1012</span><span class="o">.</span><span class="mi">5</span><span class="no">A</span>
<span class="n">str1</span> <span class="o">=</span>  <span class="nc">Java</span> <span class="nc">Programming</span> <span class="nc">Project</span> <span class="nc">Project</span>
<span class="n">str2</span> <span class="o">=</span>  <span class="nc">Java</span> <span class="nc">Programming</span> <span class="nc">Project</span> <span class="nc">Project</span>

</code></pre></div></div>

<h2 id="stringbufferreplace-메소드"><strong>StringBuffer.replace() 메소드</strong></h2>

<p>• 문자열 <strong>내용을 치환(대체)</strong>하는 메소드</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ReplaceExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuffer</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">(</span><span class="s">"today is rainy"</span><span class="o">);</span>
        <span class="nc">StringBuffer</span> <span class="n">sb2</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="n">sb2</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="mi">9</span><span class="o">,</span> <span class="mi">15</span><span class="o">,</span> <span class="s">"sunny"</span><span class="o">);</span> <span class="c1">// today is sunny가 출력되게 바꿔보세요!</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sb2 = "</span> <span class="o">+</span> <span class="n">sb2</span><span class="o">);</span><span class="err">\</span><span class="c1">// 우리는 분명 sb2에 replace된 결과(반환값)을 넣은 것 같다... 그런데....?</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"sb1 = "</span> <span class="o">+</span> <span class="n">sb1</span><span class="o">);</span> <span class="c1">// ????</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><strong>※ 아래를 출력한 결과는?</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=58784:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">ReplaceExam</span>
<span class="n">sb2</span> <span class="o">=</span> <span class="n">today</span> <span class="n">is</span> <span class="n">sunny</span>
<span class="n">sb1</span> <span class="o">=</span> <span class="n">today</span> <span class="n">is</span> <span class="n">sunny</span>
</code></pre></div></div>

<h2 id="stringbufferreverse-메소드"><strong>StringBuffer.reverse() 메소드</strong></h2>

<p>• 문자열 <strong>내용을 역순으로 뒤집는</strong> 메소드</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ReverseExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuffer</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">(</span><span class="s">"maerc eci"</span><span class="o">);</span>
        <span class="nc">StringBuffer</span> <span class="n">sb2</span><span class="o">;</span>
        <span class="n">sb2</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">.</span><span class="na">reverse</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sb2</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sb1</span><span class="o">);</span> <span class="c1">// 원본도 바뀐걸 확인 가능!</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="stringbuffertostring-메소드"><strong>StringBuffer.toString() 메소드</strong></h2>

<ul>
  <li>편집이 끝난 문자열을 <strong>String 형으로 변환</strong>하는 메소드</li>
  <li>String 클래스의 고유 기능을 활용하기 위해 <strong>StringBuffer 객체를 String 객체로 변환</strong>한다</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ToStringExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuffer</span> <span class="n">sb1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">(</span><span class="s">"TeSTThis"</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="n">str</span> <span class="o">=</span> <span class="n">sb1</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"대문자: "</span> <span class="o">+</span> <span class="n">str</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"소문자: "</span> <span class="o">+</span> <span class="n">str</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h1 id="javalang-패키기---wrapper">java.lang 패키기 - Wrapper</h1>

<h2 id="javalangwrapper-클래스"><strong>java.lang.Wrapper 클래스</strong></h2>

<ul>
  <li>기본 데이터 타입을 <strong>클래스 타입으로 포장(boxing)</strong>하는 역할</li>
  <li>
    <p>각 기본 데이터 타입 별 Wrapper가 클래스 존재한다.
<img src="/assets/img/[School]_자바_시험_대비_정리/mceclip1.png" alt="mceclip1.png" />
<strong>※ Wrapper 클래스를 왜 사용해야 할까?</strong></p>

    <ul>
      <li>ArrayList, List 등의 자료구조나 java.util 패키지의 클래스들은 객체만 사용할 수 있다</li>
      <li>java의 편의 기능들을 온전히 사용하기 위해서는 클래스로의 변환이 필요하다.</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ALTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1024</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>

        <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Double</span><span class="o">&gt;</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;&gt;();</span>

        <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mf">3.14</span><span class="o">);</span>
        <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mf">7.1</span><span class="o">);</span>
        <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mf">1.4</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>

    <h2 id="wrapperequals-메소드"><strong>Wrapper.equals() 메소드</strong></h2>

    <ul>
      <li>데이터 값(내용)이 같으면 true 아니면 false를 반환한다.</li>
      <li>Object 클래스에서 상속받은 메소드</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IntegerExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span>
        <span class="nc">Integer</span> <span class="n">i1</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
        <span class="nc">Integer</span> <span class="n">i2</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="nc">Integer</span> <span class="n">i3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">i2</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i1</span> <span class="o">==</span> <span class="n">i2</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div>    </div>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=58878:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">IntegerExam</span>
<span class="kc">true</span>
<span class="kc">true</span>
</code></pre></div>    </div>

    <h2 id="wrappertostring-메소드"><strong>Wrapper.toString() 메소드</strong></h2>

    <ul>
      <li>데이터 값을 String형으로 반환한다</li>
      <li>toString()은 Object로부터 상속받은 메소드이다</li>
      <li>Wrapper 클래스에는 <strong>static 메소드로 toString(기본 데이터형) 이 추가</strong>된다 (메소드 오버로딩)</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WarpExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">365</span><span class="o">;</span> <span class="c1">// 1년은 365일</span>
        <span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="mf">36.5</span><span class="o">;</span> <span class="c1">// 사람의 체온은 36.5</span>
        <span class="nc">Integer</span> <span class="n">wint</span> <span class="o">=</span> <span class="mi">2022</span><span class="o">;</span> <span class="c1">// 올해는 2022년</span>
        <span class="nc">Double</span> <span class="no">PI</span> <span class="o">=</span> <span class="mf">3.141592</span><span class="o">;</span>

        <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">d</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"int"</span> <span class="o">+</span> <span class="n">i</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"double "</span> <span class="o">+</span> <span class="n">d</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"id "</span> <span class="o">+</span> <span class="n">id</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Wrapped Integer "</span> <span class="o">+</span> <span class="n">wint</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"wrapped Double "</span> <span class="o">+</span> <span class="n">wint</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div>    </div>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=58899:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">WarpExam</span>
<span class="n">int365</span>
<span class="kt">double</span> <span class="mf">36.5</span>
<span class="n">id</span> <span class="mf">401.5</span>
<span class="nc">Wrapped</span> <span class="nc">Integer</span> <span class="mi">2022</span>
<span class="n">wrapped</span> <span class="nc">Double</span> <span class="mi">2022</span>
</code></pre></div>    </div>

    <h2 id="wrappervalueof-메소드"><strong>Wrapper.valueOf() 메소드</strong></h2>

    <ul>
      <li>String 문자열에 담긴 데이터 값을 Wrapper 형으로 반환한다</li>
      <li>Byte, Integer, Long, Float, Double 등이 지원된다</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WrapValueOf</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">"1024"</span><span class="o">;</span>        <span class="c1">// Q1. 숫자를 1024로 바꿔보세요</span>
        <span class="nc">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="s">"3.141592"</span><span class="o">;</span>

        <span class="nc">Integer</span> <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">str1</span><span class="o">);</span>
        <span class="nc">Double</span> <span class="n">i1</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span> <span class="c1">// Q2. str1 대신 str2를 읽어보세요</span>
        <span class="nc">Double</span> <span class="n">d1</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">str1</span><span class="o">);</span>
        <span class="nc">Double</span> <span class="n">d2</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"b: "</span> <span class="o">+</span> <span class="n">b</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"i1: "</span> <span class="o">+</span> <span class="n">i1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"d1: "</span> <span class="o">+</span> <span class="n">d1</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"d2: "</span> <span class="o">+</span> <span class="n">d2</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>

    <h2 id="wrapperparseintfloatdouble-메소드"><strong>Wrapper.parseInt/Float/Double() 메소드</strong></h2>

    <ul>
      <li>String 문자열에 담긴 데이터 값을 기본 데이터형(int/float/double)으로 반환한다</li>
      <li>실무에서 가장 많이 활용되는 메소드</li>
    </ul>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ParseDataExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
        <span class="nc">Scanner</span> <span class="n">scanner</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">double</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">double</span> <span class="n">average</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"A: "</span><span class="o">);</span>
        <span class="n">a</span><span class="o">=</span><span class="n">scanner</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"B: "</span><span class="o">);</span>
        <span class="n">b</span><span class="o">=</span><span class="n">scanner</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"input data : "</span> <span class="o">+</span> <span class="n">a</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">b</span><span class="o">);</span>

        <span class="kt">double</span> <span class="n">c</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="kt">double</span> <span class="n">d</span> <span class="o">=</span> <span class="nc">Double</span><span class="o">.</span><span class="na">parseDouble</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>

        <span class="n">sum</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">d</span><span class="o">;</span>
        <span class="n">average</span> <span class="o">=</span> <span class="n">sum</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span> <span class="o">+</span> <span class="s">" + "</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">sum</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"평균 = "</span> <span class="o">+</span> <span class="n">average</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=58917:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">ParseDataExam</span>
<span class="nl">A:</span> <span class="mi">12</span>
<span class="nl">B:</span> <span class="mi">45</span>
<span class="n">input</span> <span class="n">data</span> <span class="o">:</span> <span class="mi">12</span> <span class="mi">45</span>
<span class="mi">12</span> <span class="o">+</span> <span class="mi">45</span> <span class="o">=</span> <span class="mf">57.0</span>
<span class="n">평균</span> <span class="o">=</span> <span class="mf">28.5</span>
</code></pre></div>    </div>

    <h2 id="wrapperintfloatdoublevalue-메소드"><strong>Wrapper.int/float/doubleValue() 메소드</strong></h2>

    <p>• Wrapper 클래스가 담고 있는 데이터 값을 기본 데이터형(int/float/double)으로 Unboxing 한다</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CoronaExam</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">double</span> <span class="n">temp</span> <span class="o">=</span> <span class="mf">36.5</span><span class="o">;</span> <span class="c1">//사람의 체온은 36.5도</span>
        <span class="nc">Double</span> <span class="nc">Temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"체온 : "</span> <span class="o">+</span> <span class="n">temp</span> <span class="o">+</span> <span class="s">"도"</span><span class="o">);</span>
        <span class="nc">Temp</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Double</span><span class="o">)</span><span class="n">getCovid</span><span class="o">(</span><span class="n">temp</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"코로나의 걸린 뒤 체온:"</span> <span class="o">+</span> <span class="nc">Temp</span><span class="o">.</span><span class="na">doubleValue</span><span class="o">()</span> <span class="o">+</span> <span class="s">"도"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">Double</span> <span class="nf">getCovid</span><span class="o">(</span><span class="nc">Object</span> <span class="n">temp</span><span class="o">){</span>
        <span class="k">return</span>  <span class="o">(</span><span class="nc">Double</span><span class="o">)</span><span class="n">temp</span> <span class="o">+</span> <span class="mf">1.7</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=58939:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">CoronaExam</span>
<span class="n">체온</span> <span class="o">:</span> <span class="mf">36.5</span><span class="n">도</span>
<span class="n">코로나의</span> <span class="n">걸린</span> <span class="n">뒤</span> <span class="nl">체온:</span><span class="mf">38.2</span><span class="n">도</span>
</code></pre></div>    </div>

    <h1 id="javautil-패키지---stringtokenizer"><strong>java.util 패키지 - StringTokenizer</strong></h1>

    <h2 id="javautilstringtokenizer클래스"><strong>java.util.StringTokenizer 클래스</strong></h2>

    <ul>
      <li>구분 문자를 기준으로 <strong>문자열을 분리</strong>하는 클래스</li>
      <li><strong>구분 문자(delimiter):</strong> 문자열을 구분할 때 사용</li>
      <li>
        <p><strong>토큰(token):</strong> 구분 문자로 분리된 문자열
<img src="/assets/img/[School]_자바_시험_대비_정리/mceclip0%201.png" alt="mceclip0.png" /></p>

        <h2 id="주요-메소드"><strong>주요 메소드</strong></h2>

        <ul>
          <li><strong>countTokens()</strong>: <strong>토큰 개수</strong>를 반환하는 메소드</li>
          <li><strong>nextToken()</strong>: <strong>다음 토큰</strong>을 반환하는 메소드
<strong>※ 다음과 같은 문자열을 “&amp;”문자를 기준으로 분리하는 코드를 작성해보세요</strong></li>
          <li>“name=kitae&amp;addr=seoul&amp;age=21”</li>
        </ul>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringTokenizerEx</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"name=kitae&amp;addr=seoul&amp;age=21"</span><span class="o">;</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">query</span><span class="o">,</span> <span class="s">"&amp;="</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">countTokens</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"토큰 개수 = "</span> <span class="o">+</span> <span class="n">n</span><span class="o">);</span>

        <span class="k">while</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">()){</span>
            <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">token</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>        </div>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"C:\Program Files\Java\jdk-17.0.2\bin\java.exe"</span> <span class="s">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\lib\idea_rt.jar=57549:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.1\bin"</span> <span class="o">-</span><span class="nc">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="o">-</span><span class="n">classpath</span> <span class="nl">C:</span><span class="err">\</span><span class="nc">Users</span><span class="err">\</span><span class="nc">Revo</span><span class="err">\</span><span class="nc">IdeaProjects</span><span class="err">\</span><span class="nc">Java</span><span class="err">\</span><span class="n">out</span><span class="err">\</span><span class="n">production</span><span class="err">\</span><span class="nc">Java</span> <span class="nc">StringTokenizerEx</span>
<span class="n">토큰</span> <span class="n">개수</span> <span class="o">=</span> <span class="mi">6</span>
<span class="n">name</span>
<span class="n">kitae</span>
<span class="n">addr</span>
<span class="n">seoul</span>
<span class="n">age</span>
<span class="mi">21</span>
</code></pre></div>        </div>

        <h1 id="javalang-패키지---math">java.lang 패키지 - Math</h1>

        <h2 id="javalangmath클래스"><strong>java.lang.Math 클래스</strong></h2>

        <ul>
          <li>수학과 관련된 상수와 메소드를 제공하는 클래스이다</li>
          <li>모든 메소드는 static 형으로 정의된다</li>
          <li>생성자를 제공하지 않아 <strong>객체를 생성할 수 없다</strong></li>
        </ul>

        <h2 id="mathabs-메소드"><strong>Math.abs() 메소드</strong></h2>

        <ul>
          <li>매개변수 값의 절대값을 반환한다</li>
          <li><strong>절대값(Absolute value):</strong> 원점 0을 기준으로 하는 변위의 크기
<img src="/assets/img/[School]_자바_시험_대비_정리/Untitled.png" alt="Untitled" /></li>
        </ul>

        <h2 id="mathround-메소드"><strong>Math.round() 메소드</strong></h2>

        <ul>
          <li>매개변수 값을 정수로 반올림한 값을 반환한다</li>
          <li><strong>반올림(rounding off):</strong> 원하는 자릿수에 맞추어 데이터의 근사값을 구하는 것
<img src="/assets/img/[School]_자바_시험_대비_정리/Untitled%201.png" alt="Untitled" /></li>
        </ul>

        <h2 id="mathpow-메소드"><strong>Math.pow() 메소드</strong></h2>

        <ul>
          <li>매개변수 값을 거듭제곱한 값을 반환한다</li>
          <li><strong>거듭제곱(power):</strong> 같은 수를 여러번 반복하여 곱한 값
<img src="/assets/img/[School]_자바_시험_대비_정리/Untitled%202.png" alt="Untitled" /></li>
        </ul>

        <h2 id="mathsqrt-메소드"><strong>Math.sqrt() 메소드</strong></h2>

        <ul>
          <li>매개변수 값의 제곱근을 반환한다</li>
          <li><strong>제곱근(square root):</strong> a의 제곱근은 제곱했을 때 a가 되는 값을 말한다
<img src="/assets/img/[School]_자바_시험_대비_정리/Untitled%203.png" alt="Untitled" /></li>
        </ul>

        <h2 id="mathrandom-메소드"><strong>Math.random() 메소드</strong></h2>

        <ul>
          <li>0이상 1미만의 임의의 실수를 반환한다 (1을 포함하지 않음)</li>
          <li><strong>난수(random number):</strong> 특정한 규칙이나 의미를 가지지 않는 수
<img src="/assets/img/[School]_자바_시험_대비_정리/Untitled%204.png" alt="Untitled" /></li>
        </ul>

        <h2 id="로또-번호-추첨기">로또 번호 추첨기</h2>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MathEx</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(-</span><span class="mf">3.14</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="mf">9.0</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"e^4: "</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">exp</span><span class="o">(</span><span class="mi">4</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">round</span><span class="o">(</span><span class="mf">3.14</span><span class="o">));</span>

        <span class="c1">// 로또 번호 추첨기: 중복 번호가 나오는데..?? 해결해보자!</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"이번 주 행운의 번호는 "</span><span class="o">);</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">lotto</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">5</span><span class="o">];</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="c1">// i 번째에 랜덤 번호를 넣어줌</span>
            <span class="n">lotto</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="mi">45</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>

            <span class="c1">// 중복을 체크하고, 중복이면 i번째 번호를 재추첨</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">lotto</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">lotto</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">i</span><span class="o">--;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">lotto</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>cotes</name></author><category term="school" /><summary type="html"><![CDATA[학교 시험을 대비해 Java 수업 내용을 정리했다.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/%5BSchool%5D_%EC%9E%90%EB%B0%94_%EC%8B%9C%ED%97%98_%EB%8C%80%EB%B9%84_%EC%A0%95%EB%A6%AC/1_J76LX5mvMD-bP1qCj8PQpA.png" /><media:content medium="image" url="/assets/img/%5BSchool%5D_%EC%9E%90%EB%B0%94_%EC%8B%9C%ED%97%98_%EB%8C%80%EB%B9%84_%EC%A0%95%EB%A6%AC/1_J76LX5mvMD-bP1qCj8PQpA.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[School] 자료구조 시험 대비 정리</title><link href="/school/2022-10-11-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="[School] 자료구조 시험 대비 정리" /><published>2022-10-11T23:12:17+09:00</published><updated>2022-12-25T18:58:54+09:00</updated><id>/school/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="/school/2022-10-11-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%8B%9C%ED%97%98-%EB%8C%80%EB%B9%84-%EC%A0%95%EB%A6%AC/"><![CDATA[<p>학교 시험을 대비해 수업 내용을 정리했다.</p>

<h1 id="스택stack">스택(Stack)</h1>

<h2 id="스택이란">스택이란?</h2>

<p>삽입과 삭제가 한쪽 끝에서 발생하는 <strong>선형 자료구조</strong> 이며 LIFO(Last in First Out) 구조</p>

<h2 id="스택의-구조">스택의 구조</h2>

<p>top : 삽입과 삭제가 발생하는 부분</p>

<p>push : 자료 삽입</p>

<p>pop : 자료 삭제</p>

<p>overflow 조건 : top ≥ MAX_SIZE - 1</p>

<p>underflow 조건 : top == -1</p>

<h2 id="c-언어-스택-구현">C 언어 스택 구현</h2>

<p><code class="language-plaintext highlighter-rouge">stack.c</code></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#define STACK_SIZE 5
</span>
<span class="kt">int</span> <span class="n">stack</span><span class="p">[</span><span class="n">STACK_SIZE</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,};</span>
<span class="kt">int</span> <span class="n">top</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">PUSH</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">top</span> <span class="o">&gt;=</span> <span class="n">STACK_SIZE</span> <span class="o">-</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"STACK OVERFLOW</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span>
        <span class="n">stack</span><span class="p">[</span><span class="o">++</span><span class="n">top</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">POP</span><span class="p">(){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">top</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"STACK UNDERFLOW</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span><span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"POP =&gt; %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">stack</span><span class="p">[</span><span class="n">top</span><span class="o">--</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">PEEK</span><span class="p">(){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">top</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"STACK UNDERFLOW</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">stack</span><span class="p">[</span><span class="n">top</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">PRINT</span><span class="p">(){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">top</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"stack[%d] = %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">stack</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>

    <span class="n">PUSH</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="n">PUSH</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="n">PUSH</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
    <span class="n">POP</span><span class="p">();</span>
    <span class="n">PEEK</span><span class="p">();</span>
    <span class="n">PUSH</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
    <span class="n">PRINT</span><span class="p">();</span>

<span class="p">}</span>
</code></pre></div></div>

<h1 id="큐queue">큐(QUEUE)</h1>

<h2 id="큐란">큐란?</h2>

<p>리스트의 한쪽 끝에서 삽입이 발생하고 다른 한쪽에서는 삭제가 되는 <strong>선형 자료구조</strong> 이며 FIFO(First in First Out)구조</p>

<h2 id="큐의-구조">큐의 구조</h2>

<p>rear : 자료 삽입이 가장 마지막 인덱스를 가리키는 포인터</p>

<p>front : 삭제가 발생하는 가장 앞쪽 인덱스를 가리키는 포인터</p>

<p>삽입 : rear가 1 증가하며 값을 삽입</p>

<p>삭제 : front가 1 증가하며 값을 삭제</p>

<p>overflow 조건 : rear ≥ MAX_SIZE -1</p>

<p>underflow 조건 : front &gt;= rear</p>

<h2 id="c-언어-큐-구현">C 언어 큐 구현</h2>

<p><code class="language-plaintext highlighter-rouge">Queue.c</code></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#define MAX 10
</span>
<span class="kt">int</span> <span class="n">QUEUE</span><span class="p">[</span><span class="n">MAX</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
<span class="kt">int</span> <span class="n">front</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">rear</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">ADD</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">rear</span> <span class="o">&gt;=</span> <span class="n">MAX</span> <span class="o">-</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"QUEUE OVERFLOW!!</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">QUEUE</span><span class="p">[</span><span class="o">++</span><span class="n">rear</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">DELETE</span><span class="p">(){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">front</span> <span class="o">&gt;=</span> <span class="n">rear</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"QUEUE UNDERFLOW"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"DELETE: %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">QUEUE</span><span class="p">[</span><span class="o">++</span><span class="n">front</span><span class="p">]);</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">PRINT</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="n">front</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">rear</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"QUEUE[%d] = %d </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">QUEUE</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">ADD</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
    <span class="n">ADD</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
    <span class="n">ADD</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
    <span class="n">PRINT</span><span class="p">();</span>
    <span class="n">DELETE</span><span class="p">();</span>
    <span class="n">ADD</span><span class="p">(</span><span class="mi">40</span><span class="p">);</span>
    <span class="n">PRINT</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="원형큐circle-queue">원형큐(Circle Queue)</h1>

<h2 id="원형큐란">원형큐란?</h2>

<p>큐의 앞부분을 사용할 수 없다는 단점을 보완 했으며 큐와 특징이 같다
overflow 조건 : (rear + 1) % MAX_SIZE == front
underflow 조건 : front == raer</p>

<h2 id="c-언어-원형큐-구현">C 언어 원형큐 구현</h2>

<p><code class="language-plaintext highlighter-rouge">Circle_Queue.c</code></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#define MAX_SIZE 8
</span>
<span class="kt">int</span> <span class="n">QUEUE</span><span class="p">[</span><span class="n">MAX_SIZE</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">front</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">rear</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">enqueue</span><span class="p">(</span><span class="kt">int</span> <span class="n">item</span><span class="p">){</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">rear</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">MAX_SIZE</span> <span class="o">==</span> <span class="n">front</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"큐 포화 상태</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">rear</span> <span class="o">=</span> <span class="p">(</span><span class="n">rear</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">MAX_SIZE</span><span class="p">;</span>
    <span class="n">QUEUE</span><span class="p">[</span><span class="n">rear</span><span class="p">]</span> <span class="o">=</span> <span class="n">item</span><span class="p">;</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"enqueue &gt;&gt; Queue[%d] = %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">rear</span><span class="p">,</span> <span class="n">QUEUE</span><span class="p">[</span><span class="n">rear</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">dequeue</span><span class="p">(){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">front</span> <span class="o">==</span> <span class="n">rear</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"큐 공백 상태.</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">front</span> <span class="o">=</span> <span class="p">(</span><span class="n">front</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">MAX_SIZE</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">QUEUE</span><span class="p">[</span><span class="n">front</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="kt">int</span> <span class="n">val</span><span class="p">;</span>
    <span class="n">enqueue</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
    <span class="n">enqueue</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
    <span class="n">enqueue</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
    <span class="n">enqueue</span><span class="p">(</span><span class="mi">40</span><span class="p">);</span>
    <span class="n">val</span> <span class="o">=</span> <span class="n">dequeue</span><span class="p">();</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"dequeue &gt;&gt; %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
    <span class="n">val</span> <span class="o">=</span> <span class="n">dequeue</span><span class="p">();</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"dequeue &gt;&gt; %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><category term="school" /><summary type="html"><![CDATA[학교 시험을 대비해 수업 내용을 정리했다.]]></summary></entry><entry><title type="html">[Hexo] 블로그 github action 설정</title><link href="/hexo/2022-10-08-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-github-action-%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="[Hexo] 블로그 github action 설정" /><published>2022-10-08T03:10:46+09:00</published><updated>2022-12-25T19:09:12+09:00</updated><id>/hexo/hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-github-action-%EC%84%A4%EC%A0%95</id><content type="html" xml:base="/hexo/2022-10-08-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-github-action-%EC%84%A4%EC%A0%95/"><![CDATA[<p>저번시간에 만든 Hexo 블로그를 Github Action을 이용해 배포해보자</p>

<h2 id="github-action이란">github action이란?</h2>

<p>github에서 제공하는 CI/CD 서비스로 코드 저장소에 어떤 이벤트가 발생 했을 때 특정 작업을 실행 시키거나 주기적으로 작업을 실행시킬 수 있는 서비스다.</p>

<h2 id="github-action-설정">github action 설정</h2>

<p>프로젝트 내에 <code class="language-plaintext highlighter-rouge">.github\workflows\gh-pages.yaml</code> 파일을 생성해 주고</p>

<p>아래의 내용을 작성 후 push 해준다.</p>

<p><code class="language-plaintext highlighter-rouge">gh-pages.yaml</code></p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">name</span><span class="pi">:</span> <span class="s">Pages</span>

<span class="na">on</span><span class="pi">:</span>
  <span class="na">push</span><span class="pi">:</span>
    <span class="na">branches</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">main</span> <span class="c1"># default branch</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">pages</span><span class="pi">:</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v2</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Use Node.js 16.x</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/setup-node@v2</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">node-version</span><span class="pi">:</span> <span class="s2">"</span><span class="s">16"</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Cache NPM dependencies</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/cache@v2</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s">node_modules</span>
          <span class="na">key</span><span class="pi">:</span> <span class="s">$-npm-cache</span>
          <span class="na">restore-keys</span><span class="pi">:</span> <span class="pi">|</span>
            <span class="s">$-npm-cache</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install Theme Dependencies</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">git submodule update --init --recursive</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install Dependencies</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm install</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm run build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">peaceiris/actions-gh-pages@v3</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">github_token</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">publish_dir</span><span class="pi">:</span> <span class="s">./public</span>
</code></pre></div></div>

<p>프로젝트의 코드 저장소에서 아래 사진을 따라 설정 한다.</p>

<p><img src="/assets/img/[Hexo]_블로그_github_action_설정/github_action1.png" alt="Untitled" /></p>

<p>이제 <code class="language-plaintext highlighter-rouge">hexo new</code> 로 글 작성 후 push 하면 자동으로 페이지에 추가 되어 있다.</p>

<hr />

<h2 id="과정-정리">과정 정리</h2>

<p><img src="/assets/img/[Hexo]_블로그_github_action_설정/Github_action2.png" alt="Untitled" /></p>

<p>이벤트가 발생하면 <code class="language-plaintext highlighter-rouge">github action</code>이 <code class="language-plaintext highlighter-rouge">hexo generator</code> 를 해주고</p>

<p>이로 인해 생성된 <code class="language-plaintext highlighter-rouge">public</code> 폴더 내에 있는 파일들을 <code class="language-plaintext highlighter-rouge">gh-pages</code> branch로 옮겨 서비스 한다.</p>]]></content><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><category term="hexo" /><summary type="html"><![CDATA[저번시간에 만든 Hexo 블로그를 Github Action을 이용해 배포해보자]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/%5BHexo%5D_%EB%B8%94%EB%A1%9C%EA%B7%B8_github_action_%EC%84%A4%EC%A0%95/cover.png" /><media:content medium="image" url="/assets/img/%5BHexo%5D_%EB%B8%94%EB%A1%9C%EA%B7%B8_github_action_%EC%84%A4%EC%A0%95/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">[Hexo] 블로그 만들기</title><link href="/hexo/2022-10-07-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Hexo] 블로그 만들기" /><published>2022-10-07T18:00:03+09:00</published><updated>2022-12-25T19:00:02+09:00</updated><id>/hexo/hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="/hexo/2022-10-07-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<p>Hexo를 이용해 Github 블로그를 만들어보자</p>

<h1 id="hexo-설치">Hexo 설치</h1>

<h2 id="초기-세팅">초기 세팅</h2>

<p>1.<code class="language-plaintext highlighter-rouge">npm</code>을 이용해 hexo를 설치</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npm <span class="nb">install </span>hexo-cli <span class="nt">-g</span>
</code></pre></div></div>

<p>만약 Node Js가 설치 되어있지 않다면 설치가 필요하다.
https://nodejs.org/en/</p>

<p>2.원하는 디렉토리로 이동 후 hexo로 blog 프로젝트를 생성한다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hexo init blog
<span class="nv">$ </span><span class="nb">cd </span>blog
<span class="nv">$ </span>npm <span class="nb">install</span>
</code></pre></div></div>

<p>3.터미널에 아래 명령어를 실행해 hexo가 설치 되었는지 확인한다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hexo s
</code></pre></div></div>

<p>정상적으로 구동 되었다면 터미널에 제공된 <code class="language-plaintext highlighter-rouge">https://localhost:4000/</code>으로 접속해 본다.</p>

<hr />

<h2 id="oranges-테마-적용">oranges 테마 적용</h2>

<p>1.git 명령어 사용을 위한 repo를 생성한다</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git init
</code></pre></div></div>

<p>2.oranges 테마를 설치한다</p>

<pre><code class="language-git">git submodule add https://github.com/zchengsite/hexo-theme-oranges.git themes/oranges
</code></pre>

<p>3.테마가 잘 적용 되었는지 확인한다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>hexo s
</code></pre></div></div>

<hr />

<h2 id="oranges-테마-수정">oranges 테마 수정</h2>

<p>테마를 수정할 때에는 <code class="language-plaintext highlighter-rouge">_config.oranges.yml</code>이라는 파일을 새로 생성해 작성해야한다.
변경 사항만 작성해도 되지만 편의를 위해 <code class="language-plaintext highlighter-rouge">themes/oranges/_config.yml</code>파일에 있는 내용을 복사 했다.
테마에 수정할 곳이 있다면 https://github.com/zchengsite/hexo-theme-oranges 해당 링크에서 찾아 수정하면 된다.
예시로 코드 블럭의 스타일을 변경 해보겠다.</p>

<p><code class="language-plaintext highlighter-rouge">_config.oranges.yml</code></p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 代码块配置</span>
<span class="na">codeBlock</span><span class="pi">:</span>
  <span class="c1"># 代码块风格，默认normal</span>
  <span class="c1"># 可选：默认风格'normal'；mac黑色风格：'mac-black'</span>
  <span class="na">style</span><span class="pi">:</span> <span class="s2">"</span><span class="s">normal"</span> <span class="s">&lt;-- 이 부분을 'mac-black' 으로 바꿔준다</span>
  <span class="c1"># 代码复制</span>
  <span class="na">copy</span><span class="pi">:</span>
    <span class="na">enable</span><span class="pi">:</span> <span class="no">true</span>

</code></pre></div></div>

<hr />

<h1 id="블로그-글-작성">블로그 글 작성</h1>

<ol>
  <li>터미널에 아래의 명령어를 실행한다.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ hexo new "포스트명"
</code></pre></div></div>

<ol>
  <li><code class="language-plaintext highlighter-rouge">/source/_posts/</code>경로에 생성된 <code class="language-plaintext highlighter-rouge">포스트명.md</code>파일을 MarkDown 문법에 맞게 작성한다.</li>
</ol>

<p><code class="language-plaintext highlighter-rouge">포스트명.md</code></p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh"># 야호 첫 글이에요!</span>

[x] 글 작성하기
</code></pre></div></div>

<p>이상 포스팅을 마치겠다.</p>]]></content><author><name>GGos3</name><email>janpll0421@gmail.com</email></author><category term="hexo" /><summary type="html"><![CDATA[Hexo를 이용해 Github 블로그를 만들어보자]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/img/%5BHexo%5D_%EB%B8%94%EB%A1%9C%EA%B7%B8_github_action_%EC%84%A4%EC%A0%95/cover.png" /><media:content medium="image" url="/assets/img/%5BHexo%5D_%EB%B8%94%EB%A1%9C%EA%B7%B8_github_action_%EC%84%A4%EC%A0%95/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>